<?php
require_once('tcpdf/tcpdf.php');
$config = new Zend_Config_Ini(APPLICATION_PATH . DIRECTORY_SEPARATOR . "configs" . DIRECTORY_SEPARATOR . "config.ini", APPLICATION_ENV);
$fileSafeShipmentCode = str_replace( ' ', '-', str_replace(array_merge(
        array_map('chr', range(0, 31)),
        array('<', '>', ':', '"', '/', '\\', '|', '?', '*')
        ), '', $this->result['shipment']['shipment_code']));
$reportsFolderPath = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'reports';
$shipmentFolderPath = $reportsFolderPath . DIRECTORY_SEPARATOR . $fileSafeShipmentCode;
if ($this->result['shipment'] != "") {
    require_once('libchart/classes/libchart.php');
    $chart = new VerticalBarChart(700, 400);
    if (!file_exists($reportsFolderPath) && !is_dir($reportsFolderPath)) {
        mkdir($reportsFolderPath);
    }
    if (!file_exists($shipmentFolderPath) && !is_dir($shipmentFolderPath)) {
        mkdir($shipmentFolderPath);
    }

    class MYPDF extends TCPDF {
        public function setSchemeName($header, $schemeName, $logo,$logoRight,$comingFrom,$schemeType) {
            $this->scheme_name = $schemeName;
            $this->header = $header;
            $this->logo = $logo;
            $this->logoRight = $logoRight;
            $this->comingFrom = $comingFrom;
            $this->schemeType = $schemeType;
        }

        //Page header
        public function Header() {
            if($this->schemeType != 'tb') {
                $logoFolderPath = UPLOAD_PATH . DIRECTORY_SEPARATOR . 'logo' . DIRECTORY_SEPARATOR;
                if (trim($this->logo) != "") {
                    if (file_exists($logoFolderPath . $this->logo)) {
                        $image_file = $logoFolderPath . $this->logo;
                        $this->Image($image_file, 10, 10, 25, '', 'JPG', '', 'T', false, 300, '', false, false, 0, false, false, false);
                    }
                }
                if (trim($this->logoRight) != "") {
                    if (file_exists($logoFolderPath . $this->logoRight)) {
                        $image_file = $logoFolderPath . $this->logoRight;
                        $this->Image($image_file, 180, 10, 20, '', 'JPG', '', 'T', false, 300, '', false, false, 0, false, false, false);
                    }
                }
            }

            // Set font
            $this->SetFont('Helvetica', '', 8);

            if($this->schemeType != 'tb') {
                $this->header = str_replace("<div", "<span", trim($this->header));
                $this->header = str_replace("</div>", "</span><br/>", $this->header);
            }

            $html = $this->header;

            if($this->schemeType != 'tb') {
                $this->writeHTMLCell(0, 0, 25, 10, $html, 0, 0, 0, true, 'C', true);
            }
            if ($this->schemeType == 'vl') {
                $html='<p style="font-weight: bold;text-align:center;">Proficiency Testing Program for HIV Viral load using Dried Tube Specimen<br><strong>All participants results summary report</strong></p>';
            } else if ($this->schemeType == 'eid') {
                $html='<h3 style="font-weight: bold;text-align:center;">HIV-1 Proficiency Testing Program for Early Infant Diagnosis using Dried Blood Spot</h3>';
            } else if($this->schemeType == 'tb') {
                $html = '<h3 style="background-color:#000000;color:#ffffff;font-weight: bold;text-align:center;">';
                $html .= '<br />XPERT MTB ASSAY PROFICIENCY TEST PROGRAM PARTICIPANTâ€™S RESULTS SUMMARY<br /></h3>';
            } else {
                $html='<h3 style="font-weight: bold;text-align:center;">Proficiency Testing Program for Anti-HIV Antibodies Diagnostics using '.$this->scheme_name.'</h3>';
            }

            if($this->schemeType != 'tb') {
                $this->writeHTMLCell(0, 0, 30, 30, $html, 0, 0, 0, true, 'J', true);
                $html = '<hr/>';
                $this->writeHTMLCell(0, 0, 10, 45, $html, 0, 0, 0, true, 'J', true);
            } else {
                $this->writeHTMLCell(0, 10, 15, 20, $html, 0, 0, 0, true, 'J', true);
            }
        }

        // Page footer
        public function Footer() {
            $finalizeReport="";
            if (trim($this->comingFrom)=="finalize") {
               $finalizeReport=' -FINALIZED';
            }
            // Position at 15 mm from bottom
            $this->SetY(-15);
            // Set font
            $this->SetFont('Helvetica', 'I', 8);
            // Page number
            $this->Cell(0, 10, 'Page ' . $this->getAliasNumPage() . '/' . $this->getAliasNbPages()." - Report generated at :".date("d-M-Y H:i:s").$finalizeReport, 0, false, 'C', 0, '', 0, false, 'T', 'M');
        }
    }

    // create new PDF document
    $pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

    // set default header data
    $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

    // set header and footer fonts
    $pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
    $pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

    // set default monospaced font
    $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

    // set margins
    $pdf->SetMargins(PDF_MARGIN_LEFT, 35, PDF_MARGIN_RIGHT);
    $pdf->SetHeaderMargin(1);
    $pdf->SetFooterMargin(1);
    // set auto page breaks
    $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
    // set image scale factor
    $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
    // set some language-dependent strings (optional)
    if (@file_exists(dirname(__FILE__) . '/lang/eng.php')) {
        require_once(dirname(__FILE__) . '/lang/eng.php');
        $pdf->setLanguageArray($l);
    }

    $pdf->setSchemeName($this->header, $this->result['shipment']['scheme_name'], $this->logo,$this->logoRight,$this->comingFrom,$this->result['shipment']['scheme_type']);
    // add a page

    // ---------------------------------------------------------
    $pdf->AddPage('P', 'A4');
    $pdf->SetFont('Helvetica', 'B', 11);
    $labInfo = '<h3 style="width:100%;text-align:center;">'.$this->result['shipment']['shipment_code'].'</h3>';
    $labInfo .= '<p style="font-size:10pt;width:100%;text-align:center;">International Laboratory Branch, Division of Global HIV and TB, Centers for Disease Control and Prevention</p>';
    $labInfo .= '<table cellpadding="2" style="width:100%;font-size:8pt;">';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:10%;"></td>';
    $labInfo .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:20%;"><strong>Country</strong></td>';
    $labInfo .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:40%;"><strong>Testing Site</strong></td>';
    $labInfo .= '	     <td style="border-top:solid 10px #000000;border-bottom:solid 10px #000000;background-color:#777777;color:#ffffff;text-align:center;width:20%;"><strong>PT-ID Number</strong></td>';
    $labInfo .= '	     <td style="width:10%;"></td>';
    $labInfo .= '    </tr>';
    foreach ($this->result['tbReportParticipants'] as $tbReportParticipant) {
        $labInfo .= '    <tr>';
        $labInfo .= '	     <td></td>';
        $labInfo .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.$tbReportParticipant['country_name'].'</td>';
        $labInfo .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.$tbReportParticipant['lab_name'];
        if ($tbReportParticipant['is_excluded'] == 'yes') {
            $labInfo .= ' <span style="color:#ff0000;">(Excluded)</span>';
        }
        $labInfo .= '</td>';
        $labInfo .= '	     <td style="text-align:center;border-bottom:solid 10px #000000;">'.$tbReportParticipant['unique_identifier'].'</td>';
        $labInfo .= '	     <td></td>';
        $labInfo .= '    </tr>';
    }
    $labInfo .= '</table><br /><br />';
    $labInfo .= '<table cellpadding="3" style="width:100%;font-size:8pt;">';
    $labInfo .= '    <tr style="background-color:#777777;color:#ffffff;">';
    $labInfo .= '	     <td style="text-align:center;border-top:solid 10px #000000;border-bottom:solid 10px #000000;" colspan="'.(count($this->result['tbReportSummary']) + 1).'"><strong>Summary of All Reporting Sites</strong></td>';
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;"></td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;"><strong>'.$sampleSummary['sample_label'].'</strong>';
        if ($sampleSummary['ref_is_excluded'] == 'yes') {
            if ($sampleSummary['ref_is_exempt'] == 'yes') {
                $labInfo .= '<br /><span style="color:#ffa500;">(Exempt)</span>';
            } else {
                $labInfo .= '<br /><span style="color:#ff0000;">(Excluded)</span>';
            }
        }
        $labInfo .= '</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Total number of reporting sites</td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;">'.$sampleSummary['no_of_responses'].'</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="background-color:#cccccc;width:100%;" colspan="'.(count($this->result['tbReportSummary']) + 1).'"><strong>TB Detection</strong></td>';
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites detecting TB (%)</td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;">'.$sampleSummary['mtb_detected'].' ('.round(($sampleSummary['mtb_detected'] / $sampleSummary['no_of_responses']) * 100, 1).'%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites not detecting TB (%)</td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;">'.$sampleSummary['mtb_not_detected'].' ('.round(($sampleSummary['mtb_not_detected'] / $sampleSummary['no_of_responses']) * 100, 1).'%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites reporting uninterpretable TB result*(%)</td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;">'.$sampleSummary['mtb_uninterpretable'].' ('.round(($sampleSummary['mtb_uninterpretable'] / $sampleSummary['no_of_responses']) * 100, 1).'%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="background-color:#cccccc;width:100%;" colspan="'.(count($this->result['tbReportSummary']) + 1).'"><strong>RIF Detection</strong></td>';
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites detecting Rif resistance (%)</td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;">'.$sampleSummary['rif_detected'].' ('.round(($sampleSummary['rif_detected'] / $sampleSummary['no_of_responses']) * 100, 1).'%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites not detecting Rif resistance (%)</td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;">'.$sampleSummary['rif_not_detected'].' ('.round(($sampleSummary['rif_not_detected'] / $sampleSummary['no_of_responses']) * 100, 1).'%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites reporting indeterminate Rif result (%)</td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;">'.$sampleSummary['rif_indeterminate'].' ('.round(($sampleSummary['rif_indeterminate'] / $sampleSummary['no_of_responses']) * 100, 1).'%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:40%;">Sites reporting uninterpretable Rif result*(%)</td>';
    foreach ($this->result['tbReportSummary'] as $sampleSummary) {
        $labInfo .= '	     <td style="width:'.(60 / count($this->result['tbReportSummary'])).'%;text-align:center;">'.$sampleSummary['rif_uninterpretable'].' ('.round(($sampleSummary['rif_uninterpretable'] / $sampleSummary['no_of_responses']) * 100, 1).'%)</td>';
    }
    $labInfo .= '    </tr>';
    $labInfo .= '    <tr>';
    $labInfo .= '	     <td style="width:100%;" colspan="'.(count($this->result['tbReportSummary']) + 1).'">* Uninterpretable result = invalid, error, or no result</td>';
    $labInfo .= '    </tr>';
    $labInfo .= '</table><br />';
    $pdf->writeHTML($labInfo, true, false, true, false, '');
    //Close and output PDF document
    $fileName = $fileSafeShipmentCode . "-summary.pdf";
    $filePath = $shipmentFolderPath . DIRECTORY_SEPARATOR . $fileName;
    $pdf->Output($filePath, "F");

    //============================================================+
    // END OF FILE
    //============================================================+
    echo "success";
}
